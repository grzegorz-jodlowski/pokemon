{"version":3,"sources":["components/views/PokemonPage/PokemonPage.module.scss","components/layout/Navigation/Navigation.module.scss","components/views/HomePage/HomePage.module.scss","components/layout/AppBar/AppBar.module.scss","components/features/Pokemon/Pokemon.module.scss","components/common/Spinner/Spinner.module.scss","components/common/SearchInput/SearchInput.module.scss","components/layout/MainLayout/MainLayout.module.scss","components/common/Logo/Logo.module.scss","components/common/Copyright/Copyright.module.scss","components/features/PokemonList/PokemonList.module.scss","components/common/ButtonLink/ButtonLink.module.scss","components/common/Button/Button.module.scss","components/common/Logo/Logo.js","components/layout/Navigation/Navigation.js","components/layout/AppBar/AppBar.js","components/common/Copyright/Copyright.js","components/layout/Footer/Footer.js","components/layout/MainLayout/MainLayout.js","settings.js","utils/capitalizeFirstLetter.js","components/common/ButtonLink/ButtonLink.js","components/features/Pokemon/Pokemon.js","components/features/PokemonList/PokemonList.js","components/common/Spinner/Spinner.js","components/common/Button/Button.js","components/common/SearchInput/SearchInput.js","components/views/HomePage/HomePage.js","utils/generateIcon.js","components/views/PokemonPage/PokemonPage.js","App.js","index.js"],"names":["module","exports","Component","className","to","process","clsx","styles","root","navLink","exact","activeClassName","active","children","logo","navigation","Date","getFullYear","id","api","capitalizeFirstLetter","value","charAt","toUpperCase","slice","text","href","pokemon","title","name","button","pokemons","map","url","full","spinner","action","onClick","setSearchString","input","type","placeholder","onChange","e","target","useState","setPokemons","searchString","loading","setLoading","loadingMore","setLoadingMore","nextPageURL","setNextPageURL","errorMessage","setErrorMessage","numberOfAllPokemons","setNumberOfAllPokemons","useEffect","Axios","get","then","res","data","next","results","count","catch","err","message","filteredPokemons","filter","includes","toLocaleLowerCase","error","search","length","generateIcon","match","setPokemon","params","card","src","sprites","front_default","alt","image","descriptionContainer","statsContainer","stats","stat","index","base_stat","tooltiptext","App","path","component","HomePage","PokemonPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5485172b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PokemonPage_root__26Dvp\",\"card\":\"PokemonPage_card__3N1-2\",\"image\":\"PokemonPage_image__37blq\",\"descriptionContainer\":\"PokemonPage_descriptionContainer__3Rwev\",\"statsContainer\":\"PokemonPage_statsContainer__tQC1y\",\"name\":\"PokemonPage_name__2fR5E\",\"stats\":\"PokemonPage_stats__2fZZN\",\"tooltiptext\":\"PokemonPage_tooltiptext__1Quo4\",\"error\":\"PokemonPage_error__3QaLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navigation_root__3RmmM\",\"navLink\":\"Navigation_navLink__13N4U\",\"grow\":\"Navigation_grow__gtIS7\",\"active\":\"Navigation_active__3p-sv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HomePage_root__3WB1Y\",\"search\":\"HomePage_search__1qPqM\",\"button\":\"HomePage_button__3nIwi\",\"error\":\"HomePage_error__1hreV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AppBar_root__1s4AF\",\"navigation\":\"AppBar_navigation__24pb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Pokemon_root__19P4G\",\"title\":\"Pokemon_title__1O1l4\",\"button\":\"Pokemon_button__kTlwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Spinner_root__3KSOZ\",\"spinner\":\"Spinner_spinner__2FfVx\",\"spin\":\"Spinner_spin__3mDhZ\",\"full\":\"Spinner_full__1uATH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchInput_root__22IAp\",\"input\":\"SearchInput_input__AFMG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MainLayout_root__3pldq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Logo_root__bewmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Copyright_root__Vl81E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PokemonList_root__3zDkm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonLink_root__-1d72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__1Mx6D\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { Link } from 'react-router-dom';\n\n\nimport styles from './Logo.module.scss';\n\nconst Component = ({ className }) => <Link to={`${process.env.PUBLIC_URL}/`} className={clsx(className, styles.root)}>PokeSite</Link>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n};\n\nexport {\n  Component as Logo,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport styles from './Navigation.module.scss';\n\nconst Component = ({ className }) =>\n  <nav className={clsx(className, styles.root)}>\n    <NavLink className={clsx(styles.navLink)} exact to={`${process.env.PUBLIC_URL}/`} activeClassName={styles.active}>Home</NavLink>\n    <NavLink className={clsx(styles.navLink)} exact to={`${process.env.PUBLIC_URL}/blog`} activeClassName={styles.active}>Blog</NavLink>\n    <NavLink className={clsx(styles.navLink)} exact to={`${process.env.PUBLIC_URL}/contact`} activeClassName={styles.active}>Contact</NavLink>\n  </nav>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n};\n\nexport {\n  Component as Navigation,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './AppBar.module.scss';\n\nimport { Logo } from '../../common/Logo/Logo';\nimport { Navigation } from '../Navigation/Navigation';\n\nconst Component = ({ className, children }) =>\n  <div className={clsx(className, styles.root)}>\n    <Logo className={styles.logo} />\n    <Navigation className={styles.navigation} />\n  </div>;\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport {\n  Component as AppBar,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Copyright.module.scss';\n\nconst Component = ({ className }) => <p className={clsx(className, styles.root)}>{`Copyright © ${new Date().getFullYear()} Grzegorz Jodłowski`}</p>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n};\n\nexport {\n  Component as Copyright,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Footer.module.scss';\n\nimport { Copyright } from '../../common/Copyright/Copyright';\n\nconst Component = ({ className }) =>\n  <footer id='contact' className={clsx(className, styles.root)}>\n    <Copyright />\n  </footer>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n};\n\nexport {\n  Component as Footer,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './MainLayout.module.scss';\n\nimport { AppBar } from '../AppBar/AppBar';\nimport { Footer } from '../Footer/Footer';\n\nconst Component = ({ className, children }) =>\n  <div className={clsx(className, styles.root)}>\n    <AppBar />\n    {children}\n    <Footer />\n  </div>;\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport {\n  Component as MainLayout,\n};\n\n","export const api = {\r\n  url: 'https://pokeapi.co/api/v2/pokemon',\r\n};\r\n\r\n","export const capitalizeFirstLetter = value => {\n  if (!value || typeof value !== 'string') {\n    return;\n  } else {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\n\n\nimport styles from './ButtonLink.module.scss';\n\nconst Component = ({ className, text, href }) =>\n  <Link className={clsx(className, styles.root)} to={href} >\n    {text}\n  </Link>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string,\n  href: PropTypes.string,\n};\n\nexport {\n  Component as ButtonLink,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Pokemon.module.scss';\n\nimport { capitalizeFirstLetter } from '../../../utils/capitalizeFirstLetter';\n\nimport { ButtonLink } from '../../common/ButtonLink/ButtonLink';\n\n\nconst Component = ({ className, pokemon }) =>\n  <article className={clsx(className, styles.root)}>\n    <p className={styles.title} >{capitalizeFirstLetter(pokemon.name)}</p>\n    <ButtonLink text='See more' href={`${process.env.PUBLIC_URL}/pokemons/${pokemon.name}`} className={styles.button} />\n  </article>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  pokemon: PropTypes.object,\n};\n\nexport {\n  Component as Pokemon,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './PokemonList.module.scss';\n\nimport { Pokemon } from '../Pokemon/Pokemon';\n\nconst Component = ({ className, pokemons }) =>\n  <section className={clsx(className, styles.root)}>\n    {pokemons.map(pokemon => <Pokemon key={`${pokemon.name} ${pokemon.url}`} pokemon={pokemon} />)}\n  </section>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  pokemons: PropTypes.array,\n};\n\nexport {\n  Component as PokemonList,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Spinner.module.scss';\n\nconst Component = ({ className, full }) =>\n  <div className={clsx(className, styles.root, full && styles.full)}>\n    <div className={clsx(styles.spinner)}></div>\n  </div>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  full: PropTypes.bool,\n};\n\nexport {\n  Component as Spinner,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nconst Component = ({ className, text, action }) =>\n  <button className={clsx(className, styles.root)} onClick={action || null} >\n    {text}\n  </button>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string,\n  action: PropTypes.func,\n};\n\nexport {\n  Component as Button,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './SearchInput.module.scss';\n\nconst Component = ({ className, setSearchString }) =>\n  <div className={clsx(className, styles.root)}>\n    <input className={styles.input} type='text' placeholder='Search...' onChange={e => setSearchString(e.target.value)} />\n  </div>;\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  setSearchString: PropTypes.func,\n};\n\nexport {\n  Component as SearchInput,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Axios from 'axios';\n\nimport styles from './HomePage.module.scss';\n\nimport { api } from '../../../settings';\n\nimport { PokemonList } from '../../features/PokemonList/PokemonList';\nimport { Spinner } from '../../common/Spinner/Spinner';\nimport { Button } from '../../common/Button/Button';\nimport { SearchInput } from '../../common/SearchInput/SearchInput';\n\n\nconst Component = ({ className }) => {\n  const [pokemons, setPokemons] = useState([]);\n  const [searchString, setSearchString] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [nextPageURL, setNextPageURL] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [numberOfAllPokemons, setNumberOfAllPokemons] = useState(0);\n\n  useEffect(() => {\n    setLoading(true);\n    Axios\n      .get(`${api.url}/`)\n      .then(res => {\n        setLoading(false);\n        setNextPageURL(res.data.next);\n        setPokemons(res.data.results);\n        setNumberOfAllPokemons(res.data.count);\n      })\n      .catch(err => {\n        setLoading(false);\n        setErrorMessage(err.message);\n      });\n  }, []);\n\n  const handleLoadMorePokemons = () => {\n\n    setLoadingMore(true);\n\n    Axios\n      .get(nextPageURL)\n      .then(res => {\n        setLoadingMore(false);\n        setNextPageURL(res.data.next);\n        setPokemons([...pokemons, ...res.data.results]);\n      })\n      .catch(err => {\n        setLoadingMore(false);\n        setErrorMessage(err.message);\n      });\n  };\n\n  const filteredPokemons = pokemons.filter(({ name }) => name.includes(searchString.toLocaleLowerCase()));\n\n  return (\n    <main className={clsx(className, styles.root)}>\n      {loading\n        ?\n        <Spinner />\n        :\n        errorMessage\n          ?\n          <p className={styles.error}>Błąd pobierania danych, spróbuj ponownie</p>\n          :\n          <>\n            <SearchInput className={styles.search} setSearchString={setSearchString} />\n            <PokemonList pokemons={filteredPokemons} />\n            {loadingMore ? <Spinner /> : (pokemons.length < numberOfAllPokemons) && <Button text='Load more Pokemons!' action={handleLoadMorePokemons} className={styles.button} />}\n          </>\n      }\n    </main>\n  );\n};\n\nComponent.propTypes = {\n  className: PropTypes.string,\n};\n\nexport {\n  Component as HomePage,\n};\n\n","export const generateIcon = value => {\n  if (!value || typeof value !== 'string') {\n    return;\n  } else {\n    switch (value) {\n      case 'attack':\n        return 'fas fa-fist-raised';\n      case 'defense':\n        return 'fas fa-umbrella';\n      case 'special-attack':\n        return 'fas fa-meteor';\n      case 'special-defense':\n        return 'fas fa-shield-alt';\n      case 'speed':\n        return 'fas fa-tachometer-alt';\n\n      default:\n        return 'fas fa-meteor';\n    }\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Axios from 'axios';\n\nimport { api } from '../../../settings';\n\nimport { capitalizeFirstLetter } from '../../../utils/capitalizeFirstLetter';\nimport { generateIcon } from '../../../utils/generateIcon';\n\nimport { Spinner } from '../../common/Spinner/Spinner';\n\nimport styles from './PokemonPage.module.scss';\n\nconst Component = ({ className, match }) => {\n  const [pokemon, setPokemon] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n\n    setLoading(true);\n\n    Axios\n      .get(`${api.url}/${match.params.id}`)\n      .then(res => {\n        setLoading(false);\n        setPokemon(res.data);\n      })\n      .catch(err => {\n        setLoading(false);\n        setErrorMessage(err.message);\n      });\n  }, [match.params.id]);\n\n  return (\n    <main className={clsx(className, styles.root)}>\n      {loading\n        ?\n        <Spinner />\n        :\n        errorMessage\n          ?\n          <p className={styles.error}>Błąd pobierania danych, spróbuj ponownie</p>\n          :\n          <article className={clsx(className, styles.card)}>\n            {pokemon ?\n              <>\n                <img src={pokemon.sprites.front_default} alt={pokemon.name} className={styles.image} />\n                <div className={styles.descriptionContainer}>\n                  <h4 className={styles.name}>{capitalizeFirstLetter(pokemon.name)}</h4>\n                  <div className={styles.statsContainer}>\n                    {pokemon.stats.slice(1, 5).map((stat, index) => <div key={`${pokemon.name}-stat-${index}`} className={styles.stats}><i className={generateIcon(stat.stat.name)}></i>{`${stat.base_stat}`}<span className={styles.tooltiptext}>{stat.stat.name}</span></div>)}\n                  </div>\n                </div>\n              </>\n              : null\n            }\n          </article>\n      }\n    </main>\n  );\n};\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object,\n};\n\nexport {\n  Component as PokemonPage,\n};\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { MainLayout } from './components/layout/MainLayout/MainLayout';\nimport { HomePage } from './components/views/HomePage/HomePage';\nimport { PokemonPage } from './components/views/PokemonPage/PokemonPage';\n\nconst App = () =>\n  <MainLayout>\n    <Switch>\n      <Route exact path={`${process.env.PUBLIC_URL}/`} component={HomePage} />\n      <Route exact path={`${process.env.PUBLIC_URL}/pokemons/:id`} component={PokemonPage} />\n    </Switch>\n  </MainLayout>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './styles/normalize.scss';\nimport './styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter >\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}